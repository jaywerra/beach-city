---
export interface Coach {
    name: string;
    title: string;
    bio: string;
    buttonLabel: string;
    buttonURL: string;
}
export interface Props {
    theme: string;
    heading: string;
    coaches: Coach[];
}
const { theme, heading, coaches } = Astro.props;
---

<section class={`coaches ${theme ? `coaches-${theme}` : ""}`}>
    <div class="container">
      {heading && (<h2>{heading}</h2>)}
      <div class="coaches-grid">
        {coaches && Array.isArray(coaches) && coaches.map((coach, index) => (
          <div class="coaches-card" id={`coach-card-${index}`}>
            <div class="coaches-image">
              <img src="https://images.unsplash.com/photo-1500932334442-8761ee4810a7?q=80&w=2340&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" alt="">
            </div>
            {coach.name && <h4 class="coaches-name">{coach.name}</h4>}
            {coach.title && <p class="coaches-title">{coach.title}</p>}
            {coach.buttonLabel && (
              <div class="coaches-controls">
                <a href="#" class="button button--blue">{coach.buttonLabel}</a>
                <a href="#" class="button button-white-ghost meet-coach-button" data-index={index}>
                  Meet {coach.name}
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="icon-plus">
                    <path d="M240 64c0-8.8-7.2-16-16-16s-16 7.2-16 16l0 176L32 240c-8.8 0-16 7.2-16 16s7.2 16 16 16l176 0 0 176c0 8.8 7.2 16 16 16s16-7.2 16-16l0-176 176 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-176 0 0-176z"/>
                  </svg>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="icon-minus">
                    <path d="M432 256c0 8.8-7.2 16-16 16L32 272c-8.8 0-16-7.2-16-16s7.2-16 16-16l384 0c8.8 0 16 7.2 16 16z"/>
                  </svg>
                </a>
              </div>
            )}
            <div class="coaches-bio coaches-bio-mobile">
              <div class="coach-bio" id={`coach-bio-mobile-${index}`} style="overflow: hidden;">
                <div class="coach-contact">
                  <ul>
                    <li>
                      <h3>Social</h3>
                    </li>
                  </ul>
                </div>
                <div class="coach-intro">
                  <p>{coach.bio}</p>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      <div class="coaches-bio coaches-bio-desktop">
        {coaches && Array.isArray(coaches) && coaches.map((coach, index) => (
          <div class="coach-bio" id={`coach-bio-desktop-${index}`} style="overflow: hidden;">
            <div class="coach-contact">
              <ul>
                <li>
                  <h3>Social</h3>
                </li>
              </ul>
            </div>
            <div class="coach-intro">
              <p>{coach.bio}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

<style>
    .coaches {
        padding: 40px 16px;
        background: var(--white);

        @media (min-width: 750px) {
            padding: 96px 16px 46px;
        }

        &.coaches-dark {
            background: var(--black100);
            color: var(--white);
        }

        .container {
            width: 100%;
        }

        h2 {
            margin: 0 0 32px;
            font-family: "proxima-nova-extra-condensed", sans-serif;
            font-size: 40px;
            font-weight: 600;
            letter-spacing: -1px;
            line-height: 1.15;
            text-transform: uppercase;
            @media (min-width: 750px) {
                max-width: 500px;
                font-size: 48px;
            }
        }

        .coaches-grid {
            display: grid;
            gap: 40px;
            grid-template-columns: 1fr;

            @media (min-width: 750px) {
                gap: 48px;
                grid-template-columns: 1fr 1fr 1fr;
            }
        }

        .coaches-image {
            margin-bottom: 20px;
            border-radius: 2px;
            overflow: hidden;

            img {
                width: 100%;
            }
        }

        .coaches-name,
        .coaches-title {
            margin: 0;
            font-family: "proxima-nova-extra-condensed", sans-serif;
            font-weight: 600;
            letter-spacing: -1px;
            line-height: 1.25;
            text-transform: uppercase;
        }

        .coaches-name {
            font-size: 36px;
        }

        .coaches-title {
            font-size: 22px;
        }

        .coaches-controls {
            display: flex;
            gap: 18px;
            margin: 22px 0 0;
        }
        .coaches-bio {
            position: relative;
            margin-top: 40px;
            padding: 40px 0;

            &.expanded  {
                border-top: 1px solid var(--white);
            }
        }

        .meet-coach-button {
            display: flex;
            gap: 14px;

            &:hover {
                svg {
                    fill: var(--black);
                }
            }

            .icon-minus,
            .icon-plus {
                width: 20px;
                fill: var(--white);
                transition: ease 0.25s;
            }

            .icon-minus {
                display: none;
            }

            &.expanded {
                background: var(--white);
                color: var(--black);

                .icon-plus {
                    display: none;
                }
                .icon-minus {
                    display: inline-block;
                    fill: var(--black);
                }
            }
        }
        @media (max-width: 750px) {
            .coaches-bio-desktop {
                display: none;
            }
        }

        @media (min-width: 750px) {
            .coaches-bio-mobile {
                display: none;
            }
        }

        .coaches-bio-mobile {
            display: none;

            &.expanded {
                display: flex;

                @media (min-width: 750px) {
                    display: none;
                }
            }
        }


        .coach-bio {
            display: flex;
            flex-direction: column;

            @media (min-width: 750px) {
                flex-direction: row;
            }

            .coach-contact {
                @media (min-width: 750px) {
                    width: 33.333%;
                }

                ul {
                    h3 {
                        font-family: "proxima-nova-extra-condensed", sans-serif;
                        font-size: 22px;
                        text-transform: uppercase;
                    }
                }
            }
            .coach-intro {
                @media (min-width: 750px) {
                    width: 66.667%;
                }
            }
            p {
                font-size: 18px;
                @media (min-width: 750px) {
                    font-size: 20px;
                }
            }

            ul {
                padding-left: 0;
            }
        }
    }
</style>

<script>
    import gsap from "gsap";
    document.addEventListener('DOMContentLoaded', function() {
        const buttons = document.querySelectorAll('.meet-coach-button');
        const mobileBios = document.querySelectorAll('.coach-bio-mobile .coach-bio');
        const desktopBios = document.querySelectorAll('.coaches-bio-desktop .coach-bio');

        // Initially set all bios to hidden with GSAP
        gsap.set(mobileBios, { autoAlpha: 0, height: 0 });
        gsap.set(desktopBios, { autoAlpha: 0, height: 0 });

        buttons.forEach(button => {
            button.addEventListener('click', function(event) {
            event.preventDefault();

            const index = button.getAttribute('data-index');
            const mobileBio = document.getElementById(`coach-bio-mobile-${index}`);
            const desktopBio = document.getElementById(`coach-bio-desktop-${index}`);

            const isMobile = window.innerWidth < 768;

            // Determine which bio to toggle based on screen size
            const bio = isMobile ? mobileBio : desktopBio;
            const bios = isMobile ? mobileBios : desktopBios;

            if (!this.classList.contains("expanded")) {
                buttons.forEach(button => button.classList.remove("expanded"));
                this.classList.add("expanded");
                document.querySelector(".coaches-bio").classList.add("expanded");
                this.parentNode.nextElementSibling.classList.add("expanded");
            } else {
                this.classList.remove("expanded");
                document.querySelector(".coaches-bio").classList.remove("expanded");
                this.parentNode.nextElementSibling.classList.remove("expanded");
            }

            if (!bio.classList.contains("active")) {
                bios.forEach(bio => bio.classList.remove("active"));
                gsap.to(bios, {
                    duration: 0.5,
                    autoAlpha: 0,
                    height: 0,
                    ease: "power2.inOut"
                });

                bio.classList.add("active");
                gsap.to(bio, {
                    duration: 0.5,
                    autoAlpha: 1,
                    height: "auto",
                    ease: "power2.inOut"
                });
            } else {
                bio.classList.remove("active");
                gsap.to(bio, {
                    duration: 0.5,
                    autoAlpha: 0,
                    height: 0,
                    ease: "power2.inOut"
                });
            }
            });
        });

        // Handle window resize
        window.addEventListener('resize', () => {
            buttons.forEach(button => button.classList.remove('expanded'));
            gsap.set(mobileBios, { autoAlpha: 0, height: 0 });
            gsap.set(desktopBios, { autoAlpha: 0, height: 0 });

            mobileBios.forEach(bio => bio.classList.remove('active'));
            desktopBios.forEach(bio => bio.classList.remove('active'));
            document.querySelectorAll(".coaches-bio").forEach(bio => bio.classList.remove("expanded"));
        });

    });


</script>