---
import { Image } from 'astro:assets';
import logo from "/src/assets/images/bcg-logo.png";
const currentUrl = Astro.url.pathname;
const navLinks = [
    {
        path: "/day-passes/",
        label: "Day Passes"
    },
    {
        path: "/memberships/",
        label: "Golf Lessons"
    },
    {
        path: "/golf-technology/",
        label: "Technology"
    },
    {
        path: "/about/",
        label: "About Us"
    },
    {
        path: "/club-fitting/",
        label: "Club Fitting"
    },
    {
        path: "/contact/",
        label: "Contact"
    }
]
---

<header class="header">
    <div class="container">
        <div class="header-brand">
            <a href="/" class="header-logo logo">
                <Image src={logo} alt="Beach City Golf Logo" />
            </a>
        </div>
        <div class="header-nav">
            <nav>
                <ul>
                    {navLinks.map(link => (
                        <li class={currentUrl === link.path ? 'active' : ''}>
                            <a href={link.path}>
                                {link.label}
                            </a>
                        </li>
                    ))}
                </ul>
            </nav>
        </div>
        <div class="header-controls">
            <ul>
                <li>
                    <a href="#" class="call-us">
                        310-439-9002
                    </a>
                </li>
                <li>
                    <a href="https://app.squarespacescheduling.com/schedule.php?owner=21968379&appointmentType=category:BCGC%20Getting%20Started%20%2F%20Member%20Practice%3A%20Hermosa%20Beach%2C%20Ca" class="button button--blue" target="_blank">
                        Get Started
                    </a>
                </li>
            </ul>
            <button class="mobile-menu" aria-label="Toggle for Mobile Menu">
                <span></span>
                <span></span>
                <span></span>
            </button>
        </div>
    </div>
</header>

<style>
    .header {
        position: fixed;
        top: 0;
        left: 0;
        padding: 16px 0;
        width: 100%;
        background-color: transparent;
        transition: linear 0.25s;
        z-index: 10;

        .container {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .header-nav {
            display: none;

            &.visible {
                display: block;
                position: absolute;
                left: 0;
                top: 100%;
                height: 80vh;
                width: 100vw;
                background: var(--white);

                ul {
                    display: flex;
                    flex-direction: column;
                    gap: 16px;

                    a {
                        padding: 10px 16px;
                    }
                }
            }

            @media (min-width: 1150px) {
                display: block;
            }

            ul {
                display: flex;
                gap: 30px;
                margin: 24px 0 0;
                padding-left: 0;

                @media (min-width: 750px) {
                    margin: 0;
                }

                @media (min-width: 1150px) {
                    gap: 24px;
                }

                @media (min-width: 1350px) {
                    gap: 30px;
                }

                li.active  {
                    a {
                        color: var(--blue100);
                    }
                }

                a {
                    color: var(--black);
                    font-family: "proxima-nova-extra-condensed", sans-serif;
                    font-size: 21px;
                    font-weight: 600;
                    letter-spacing: 0.025em;
                    text-transform: uppercase;
                    transition: linear 0.25s;

                    @media (min-width: 750px) {
                        color: var(--white);
                    }

                    @media(hover: hover) and (pointer: fine) {
                        &:hover {
                            color: var(--blue100);
                        }
                    }
                }
            }

            &.header-scrolled {
                ul {
                    a {
                        color: var(--black);
                        @media(hover: hover) and (pointer: fine) {
                            &:hover {
                                color: var(--blue100);
                            }
                        }
                    }
                }
            }
        }

        .mobile-menu {
            position: relative;
            height: 36px;
            width: 36px;
            background: none;
            border: none;

            &.active {
                span {
                    &:first-child {
                        top: 15px;
                        transform: rotate(45deg);
                    }
                    &:nth-child(2) {
                        display: none;
                    }
                    &:last-child {
                        top: 15px;
                        transform: rotate(-45deg);
                    }
                }
            }

            span {
                position: absolute;
                top: 5px;
                left: 0;
                height: 3px;
                width: 100%;
                background: var(--blue100);
                transition: ease 0.25s;

                &:nth-child(2) {
                    top: 15px;
                }

                &:last-child {
                    top: 25px;
                }
            }

            @media (min-width: 750px) {
                display: none;
            }
        }

        .header-controls {
            display: flex;
            align-items: center;
            gap: 20px;
            ul {
                display: flex;
                align-items: center;
                gap: 24px;
                margin: 0;
                padding: 0;

                a:not(.button) {
                    display: none;
                    color: var(--white);
                    font-family: "proxima-nova-extra-condensed", sans-serif;
                    font-size: 21px;
                    font-weight: 700;
                    letter-spacing: 0.02em;
                    transition: linear 0.25s;
                    @media (min-width: 750px) {
                        display: inline-block;
                    }
                }
            }

            &.header-scrolled {
                a.call-us {
                    color: var(--blue100);
                }
            }
        }
    }
    .logo {
        display: inline-block;
        width: 130px;

        @media (min-width: 500px) {
            width: 200px;
        }
    }
</style>

<script>
    import gsap from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";
    import Lenis from "lenis";
    gsap.registerPlugin(ScrollTrigger) 

    const header = document.querySelector(".header");
    const headerLinks = gsap.utils.toArray(".header-nav li a");
    const headerTimeline = gsap.timeline();
    const mobileBurger = document.querySelector(".mobile-menu");
    const headerNav = document.querySelector(".header-nav");

    // Initialize Lenis
    const lenis = new Lenis({
        lerp: 0.1,
        smooth: true,
        direction: 'vertical'
    });

    function raf(time) {
        lenis.raf(time);
        requestAnimationFrame(raf);
    }

    requestAnimationFrame(raf);

    // Update header to white on scroll
    gsap.to(header, {
        backgroundColor: "#FFF",
        color: "#000",
        scrollTrigger: {
            start: "top+=50",
            end: "bottom top",
            toggleActions: "play none none reverse",
            toggleClass: {
                className: "header-scrolled",
                targets: [".header-nav", ".header-controls"],
            },
        },
        duration: 0.3
    });

    mobileBurger.addEventListener("click", event => {
        if (!event.currentTarget.classList.contains("active")) {
            event.currentTarget.classList.add("active");
            headerNav.classList.add("visible");
        } else {
            event.currentTarget.classList.remove("active");
            headerNav.classList.remove("visible");
        }
    });

    window.addEventListener("resize", () => {
        if (mobileBurger.classList.contains("active")) {
            mobileBurger.classList.remove("active");
            headerNav.classList.remove("visible");
        }
    })

</script>