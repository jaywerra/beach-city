---
export interface Review {
  stars: number; // Number of stars (1-5)
  logo: string; // URL of the logo
  text: string; // Review text
  author: string; // Review author
}

const reviews: Review[] = [
  {
    stars: 5,
    logo: '/google-icon-logo.svg',
    text: 'Beach City Golf Club in Hermosa Beach is awesome. That is really all I need to say. Since practicing here my golf game has improved by leaps. The technology and their expert instructors here are key. Their teaching style is perfect for me and the technology melds just right. So much has been learned and my game has really improved. Their membership options vary for your comfort level.',
    author: 'Dusty Depree'
  },
  {
    stars: 5,
    logo: '/google-icon-logo.svg',
    text: 'Beach City Golf Club in Hermosa Beach is awesome. That is really all I need to say. Since practicing here my golf game has improved by leaps. The technology and their expert instructors here are key. Their teaching style is perfect for me and the technology melds just right. So much has been learned and my game has really improved. Their membership options vary for your comfort level.',
    author: 'Dusty Depree'
  },
];

// Group reviews in pairs
const reviewPairs = [];
for (let i = 0; i < reviews.length; i += 2) {
  reviewPairs.push(reviews.slice(i, i + 2));
}
---

<section class="reviews">
    <div class="reviews-ticker splide">
      <div class="splide__track">
        <div class="splide__list">
          {reviewPairs.map((pair, index) => (
            <div class="reviews-items splide__slide" key={index}>
              {pair.map((review, reviewIndex) => (
                <div class="reviews-item" key={reviewIndex}>
                  <div class="reviews-item-header">
                    <div class="reviews-item-stars">
                      <svg xmlns="http://www.w3.org/2000/svg" width="240" height="38.046" viewBox="0 0 240 38.046">
                        <g id="stars" transform="translate(-307 -5726)">
                          {Array.from({ length: review.stars }).map((_, starIndex) => (
                            <path key={starIndex} id={`star-sharp-sharp-solid-${starIndex}`} d="M38.9,0l4.719,14.535H58.9L46.543,23.511l4.719,14.535L38.9,29.062,26.539,38.046l4.719-14.535L18.9,14.535H34.178Z" transform={`translate(${starIndex * 50 + 288.1} 5726)`} fill="#f0b214"/>
                          ))}
                        </g>
                      </svg>
                    </div>
                    <div class="reviews-item-logo">
                      <img src={review.logo} alt="Review logo">
                    </div>
                  </div>
                  <p>{review.text}</p>
                  <p class="reviews-item-author">{review.author}</p>
                </div>
              ))}
            </div>
          ))}
        </div>
      </div>
    </div>
</section>

<style>
    @import '@splidejs/splide/css';
    .reviews {
        padding: 80px 0;
        background: var(--grey100);

        .reviews-items {
            display: flex;
            flex-direction: column;
            gap: 24px;
        }

        .reviews-item {
            padding: 24px;
            background: var(--white);
            border-radius: 24px;

            @media (min-width: 500px) {
                padding: 32px;
            }

            &:last-child {
                margin-left: 24px;
            }

            .reviews-item-header {
                display: flex;
                align-items: center;
                justify-content: space-between;
            }

            .reviews-item-stars {
                max-width: 160px;

                svg {
                    width: 100%;
                }
            }

            .reviews-item-logo {
                max-width: 32px;
            }

            p {
                font-size: 16px;
            }

            .reviews-item-author {
                font-weight: 700;
            }
        }
    }
</style>

<script>
    import { Splide } from '@splidejs/splide';
    import { AutoScroll } from '@splidejs/splide-extension-auto-scroll';
    const reviewsTicker = document.querySelector('.reviews-ticker.splide');

    if (reviewsTicker) {
        new Splide(reviewsTicker, {
            type: "loop",
            arrows: false,
            perPage: 1,
            focus: "center",
            mediaQuery: "min",
            autoScroll: {
                speed: 0.5,
            },
            gap: "24px",
            pagination: false,
            breakpoints: {
                500: {
                    perPage: 2,
                },
                820: {
                    perPage: 3,
                },
                1400: {
                    perPage: 4,
                },
                1800: {
                    perPage: 5,
                },
            },
        }).mount({ AutoScroll });
    }
</script>